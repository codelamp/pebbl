async("theory.plugins.velocityRange",["theory"],function(t){t=t||{};t.plugins=t.plugins||{},t.plugins.velocityRange=function(r){t.base.mix(r||{},{max:0,zero:0,min:0,step:0,internal:null,create:function(t,r,e,n){return this.prep.apply(Object.create(this),arguments)},prep:function(t,r,e,n){return this.current={min:t,zero:r,max:e,step:n},this.internal={min:t,zero:r,max:e,step:n,value:0,stretch:1},this},stretch:function(t){this.internal.stretch=t,this.current.min=this.internal.min*t,this.current.max=this.internal.max*t},value:function(t){return arguments.length?(t>this.current.max&&(t=this.current.max),t<this.current.min&&(t=this.current.min),this.internal.value=t,this):this.internal.value},stepUp:function(t){var r=this.internal.value+(t||this.current.step);return r>this.current.max&&(r=this.current.max),this.internal.value=r,this},stepDown:function(t){var r=this.internal.value-(t||this.current.step);return r<this.current.min&&(r=this.current.min),this.internal.value=r,this},stepZero:function(t){var r=this.internal.value;return r>this.current.zero?(r-=t||this.current.step)<this.current.zero&&(r=this.current.zero):r<this.current.zero&&(r+=t||this.current.step)>this.current.zero&&(r=this.current.zero),this.internal.value=r,this},isZero:function(t){var r=this.internal.value;return t?r>this.current.zero-t&&r<this.current.zero+t:r===this.current.zero},zero:function(){this.internal.value=this.current.zero}})}(t.plugins.velocityRange)});