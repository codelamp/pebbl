async("theory.array",["theory","theory.is","theory.to"],function(r,a,n){return r.plugins.array=function(r){return{dupe:function(r){return r?n.array(r,0):[]},unshift:function(r){return a.array(r)||(r=n.array(r)),Array.prototype.unshift.apply(r,n.array(arguments,1)),r},push:function(r){return a.array(r)||(r=n.array(r)),Array.prototype.push.apply(r,n.array(arguments,1)),r},forEach:function(r,t,o,y){if(arguments.length<3)throw new Error("forEach expects 4 args: items, context, args and callback.");var c=a.callable(o),l=a.callable(t);y=a.callable(y)||function(){},r=a.array(r)||n.array(r),t=t||this,o=a.array(o)||c?c?o:go.dupe(o):go.array(o),c&&l?r.forEach(function(r,a,n){var c=t.call(n,r,a,n,y),l=o.call(c,r,a,n,y);y.apply(c,go.unshift(l,r,a,n))}):c?r.forEach(function(r,a,n){var c=o.call(t,r,a,n,y);y.apply(t,go.unshift(c,r,a,n))}):l?(o.unshift(0,0,r),r.forEach(function(r,a,n){o[0]=r,o[1]=a;var c=t.call(n,r,a,n,y);y.apply(c,o)})):(o.unshift(0,0,r),r.forEach(function(r,a){o[0]=r,o[1]=a,y.apply(t,o)}))}}}(r.plugins.array),r.plugins.array});